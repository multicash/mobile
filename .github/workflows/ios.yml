name: iOS

on: [push, pull_request]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup BuildCache
        uses: mikehardy/buildcache-action@v1
      - name: Cache modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/ios/Pods
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock', '**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-pods-
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install Yarn Modules
        run: yarn
      - name: Install iOS Cocoa Pods
        run: pod install
        working-directory: ios
      - name: Build with Xcode
        uses: yukiarrr/ios-build-action@v1.4.0
        with:
          project-path: ${{ github.workspace }}/ios/MultiCash.xcodeproj
          workspace-path: ${{ github.workspace }}/ios/MultiCash.xcworkspace
          output-path: ${{ github.workspace }}/ios/app-release.ipa
          p12-base64: ${{ secrets.IOS_P12_BASE64 }}
          certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          mobileprovision-base64: ${{ secrets.IOS_MOBILEPROVISION_BASE64 }}
          code-signing-identity: ${{ secrets.IOS_CODE_SIGNING_IDENTITY }}
          team-id: ${{ secrets.IOS_TEAM_ID }}
          export-method: app-store
          configuration: Release
          scheme: MultiCash
      - name: Upload Release Artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: iOS-release
          path: ${{ github.workspace }}/ios/app-release.ipa

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: macos-latest

    steps:
      - name: Download Release Artifact
        uses: actions/download-artifact@v2
        with:
          name: iOS-release
      - name: Upload to App Store Connect
        run: |
          xcrun altool --upload-app -t ios -f "${{ github.workspace }}/app-release.ipa" -u "${{ secrets.IOS_UPLOAD_USER }}" -p "${{ secrets.IOS_UPLOAD_PASSWORD }}"
      - name: Upload Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.workspace }}/app-release.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
