// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render dot input renders correctly 1`] = `
<import __react__vue__Vue, { observer as __react__vue__observer } from 'vue-native-core'
import __react__vue__ReactNative from 'react-native'
import __react__vue__PropType from 'prop-types'
import { buildNativeComponent as __react__vue__buildNativeComponent } from 'vue-native-helper'
import { bindNativeClass as __react__vue__bindClass,bindNativeStyle as __react__vue__bindStyle,mergeNativeStyleAndNativeClass as __react__vue__mergeNativeStyleAndNativeClass,mergeProps as __react__vue__mergeProps,renderList as __react__vue__renderList } from 'vue-native-helper'
import {
      createElement as __react__vue__createElement,
      Component as __react__vue__Component
    } from 'react'


const __react__vue__options =  {
  name: 'DotInput',

  props: {
    value: {
      type: Array,
      required: true
    }
  },

  computed: {
    styles () {
      return stylesStore(this.isDarkScheme)
    }
  }
}

const stylesStore = (isDarkScheme) => {
  return {
    digitDotsContainer: {
      flexDirection: 'row',
      margin: 20
    },

    digitDotFilled: {
      backgroundColor: isDarkScheme ? '#6d6de3' : '#1e1e4d',
      width: 20,
      height: 20,
      borderRadius: 10
    },

    digitDot: {
      backgroundColor: isDarkScheme ? '#b95c8b' : '#931A5A',
      width: 20,
      height: 20,
      borderRadius: 10
    }
  }
}

const __react__vue__render = function render(vm) {
    return __react__vue__createElement(vm.$options.components['View'], __react__vue__mergeProps.call(this, this.props.__react__vue__nativeEvents, {
        ref: ref => {
            this.setRootRef(ref);
            this.props['__react__vue__setRef'] && this.props['__react__vue__setRef'](ref);
        },
        style: __react__vue__mergeNativeStyleAndNativeClass(__react__vue__bindClass.call(this, {
            parentClass: this.props.style
        }), __react__vue__bindStyle(vm['styles'].digitDotsContainer, undefined, undefined))
    }), __react__vue__renderList(vm['value'], function(index, i) {
        return __react__vue__createElement(vm.$options.components['View'], {
            key: i,
            style: __react__vue__mergeNativeStyleAndNativeClass(undefined, __react__vue__bindStyle({
                paddingLeft: i === 0 ? 0 : 10
            }, undefined, undefined))
        }, index !== undefined ? __react__vue__createElement(vm.$options.components['View'], {
            style: __react__vue__mergeNativeStyleAndNativeClass(undefined, __react__vue__bindStyle(vm['styles'].digitDotFilled, undefined, undefined))
        }) : __react__vue__createElement(vm.$options.components['View'], {
            style: __react__vue__mergeNativeStyleAndNativeClass(undefined, __react__vue__bindStyle(vm['styles'].digitDot, undefined, undefined))
        }));
    }.bind(this)));
};

const __react__vue__css = {}

const __react__vue__ComponentBuilded = __react__vue__buildNativeComponent(__react__vue__render, __react__vue__options, {Component: __react__vue__Component, PropTypes: __react__vue__PropType, Vue: __react__vue__Vue, ReactNative: __react__vue__ReactNative, css: __react__vue__css})

export default __react__vue__observer(__react__vue__ComponentBuilded) />
`;
